{% extends 'layout.twig' %}

{% block head %}
	{{ parent() }}
	<title>Homepage</title>
	<link rel="stylesheet" href="{{ asset('bootstrap-slider.min.css','css') }}">
	<script src="{{ asset('bootstrap-slider.min.js','javascript') }}"></script>
{% endblock %}

{% block content %}
	{{ parent() }}
	<nav class="navbar navbar-toggleable-md navbar-light hidden-md-down bg-faded p-0 align-items-stretch" id="options-lg-navbar" style="height: 47px; border-bottom: 1px solid #dce0e0;">
		<ul class="nav navbar-nav">
			<li class="nav-item hidden-md-down h-100 px-2">
				<div class="form-group input-group h-100" style="width: 220px;">
					<span class="input-group-addon panel-input-symbol p-0 border-bottom-0" style="background-color: #FAFAFA;"><i class="fa fa-globe" aria-hidden="true"></i></span>
					<input type="text" title="Location" class="form-control h-100 border-0" id="pac-input" data-longitude="" data-latitutde="" style="width: 210px; background-color: #FAFAFA;" placeholder="Location">
				</div>
			</li>
			<li class="nav-item hidden-md-down" style="height: 46px;">
				<button id="radius-popover" type="button" class="btn btn-option square-border" data-container="body" data-toggle="popover" data-placement="bottom">Radius
					<i class="fa fa-caret-down" aria-hidden="true"></i></button>
			</li>
			<li class="nav-item hidden-md-down" style="height: 46px; margin-left: -6px;">
				<button id="quantity-popover" type="button" class="btn btn-option square-border" data-container="body" data-toggle="popover" data-placement="bottom">Quantity
					<i class="fa fa-caret-down" aria-hidden="true"></i></button>
			</li>
			<li class="nav-item hidden-md-down" style="height: 46px; margin-left: -6px;">
				<button id="weight-popover" type="button" class="btn btn-option square-border" style="border-right: 1px solid #dce0e0" data-container="body" data-toggle="popover" data-placement="bottom">Weight
					<i class="fa fa-caret-down" aria-hidden="true"></i></button>
			</li>
		</ul>

		<!-- POPOVER CONTENT -->
		<div id="radius-popover-content" class="d-none">
			<div class="d-flex flex-column p-2 pb-0">
				<div class="d-flex flex-row justify-content-between pb-2">
					<div>Items within:</div>
					<div id="radiusDisplay">300m</div>
				</div>
				<input id="radiusSlider" data-slider-tooltip="hide" data-slider-min="100" data-slider-max="1500" data-slider-step="100" data-slider-value="300"/>
				<div class="d-flex py-2 justify-content-between">
					<a href="#" class="popovercancel" data-type="button" style="color:black">Cancel</a>
					<a href="#" id="radiusApply" class="flex-last" style="">Apply</a>
				</div>
			</div>
		</div>

		<div id="quantity-popover-content" class="d-none">
			<div class="form-group">
				<label for="quantitySlider">Quantity</label>
				<input id="quantitySlider" data-slider-min="1" data-slider-max="10" data-slider-step="1" data-slider-value="[1,5]"/>
			</div>
			<button id="quantityApply" class="btn btn-option square-border" style="background-color: #E8E9EC; border: 1px solid #dce0e0">Apply</button>
		</div>

		<div id="weight-popover-content" class="d-none">
			<div class="form-group">
				<label for="weightSlider">Min Weight</label>
				<input id="weightSlider" data-slider-min="0" data-slider-max="2000" data-slider-step="100" data-slider-value="[0,300]"/>
			</div>
			<button id="weightApply" class="btn btn-option square-border" style="background-color: #E8E9EC; border: 1px solid #dce0e0">Apply</button>
		</div>
		<!-- END POPOVER CONTENT -->

		<div class="container" id="searchbreaker"></div>

		<ul class="nav navbar-nav align-self-end">
			<li class="nav-item" style="height: 46px; margin-left: -6px;">
				<button class="btn btn-option square-border fake-button-new" style="">Sort By:</button>
			</li>
			<li class="nav-item" style="height: 46px; margin-left: -6px;">
				<button id="radius-sort" class="btn btn-option square-border" style="">Radius
					<i id="radius-sort-icon" class="fa fa-sort-asc" aria-hidden="true"></i></button>
			</li>
			<li class="nav-item" style="height: 46px; margin-left: -6px;">
				<button id="quantity-sort" class="btn btn-option square-border" style="">Quantity
					<i id="quantity-sort-icon" class="" aria-hidden="true"></i></button>
			</li>
			<li class="nav-item" style="height: 46px; margin-left: -6px;">
				<button id="weight-sort" class="btn btn-option square-border" style="">Weight
					<i id="weight-sort-icon" class="" aria-hidden="true"></i></button>
			</li>
		</ul>
	</nav>

	<div class="d-flex hidden-lg-up" style="padding: 0; height: 47px; border-bottom: 1px solid #dce0e0;">
		<ul class="nav nav-pills nav-fill w-100">
			<li class="nav-item" style="margin-left: -6px;">
				<button class="btn btn-option square-border w-100" type="button" id="filterCollapseBtn">Filter</button>
			</li>
			<li class="nav-item" style="margin-left: -6px;">
				<button class="btn btn-option square-border w-100" type="button" id="sortCollapseBtn">Sort</button>
			</li>
		</ul>
	</div>

	<div class="collapse hidden-lg-up" id="collapseFilter">
		<!-- FILTER OPTIONS -->
		<div class="d-flex flex-column p-3">
			<div class="d-flex align-items-center">
				<label class="sr-only" for="locationInputGroup">Location</label>
				<div class="d-flex flex-auto mr-3">
					<div class="input-group p-0">
						<div class="input-group-addon square-border"><i class="fa fa-search" aria-hidden="true"></i></div>
						<input type="text" title="Location" class="form-control square-border" id="pac-input" placeholder="Location">
					</div>
				</div>
				<div class="d-flex flex-auto ml-3">
					<div class="h5 my-auto">
						Radius:
					</div>
					<div class="input-group ml-2 mb-0">
						<div class="input-group-addon square-border"><i class="fa fa-dot-circle-o" aria-hidden="true"></i></div>
						<input id="coll-radius" type="number" title="Radius" class="form-control square-border" placeholder="Meters" onkeypress='return event.charCode >= 48 && event.charCode <= 57;'>
					</div>
				</div>

			</div>

			<div class="d-flex mb-2">
				<div class="d-flex flex-column mr-3">
					<h5 class="mt-3">Amount</h5>
					<label class="sr-only" for="amountInputGroup">Amount</label>
					<div class="input-group mb-0">
						<div class="input-group-addon square-border"><i class="fa fa-hashtag" aria-hidden="true"></i></div>
						<input id="coll-quantMin" type="number" title="Quantity" class="form-control square-border" placeholder="Min" onkeypress='return event.charCode >= 48 && event.charCode <= 57;'>
						<input id="coll-quantMax" type="number" title="Quantity" class="form-control square-border" placeholder="Max" onkeypress='return event.charCode >= 48 && event.charCode <= 57;'>
					</div>
				</div>

				<div class="d-flex flex-column ml-3">
					<h5 class="mt-3">Weight</h5>
					<label class="sr-only" for="weightInputGroup">Weight</label>
					<div class="input-group mb-0">
						<div class="input-group-addon square-border"><i class="fa fa-balance-scale" aria-hidden="true"></i></div>
						<input id="coll-weightMin" type="number" title="Weight" class="form-control square-border" placeholder="Min" onkeypress='return event.charCode >= 48 && event.charCode <= 57;'>
						<input id="coll-weightMax" type="number" title="Weight" class="form-control square-border" placeholder="Max" onkeypress='return event.charCode >= 48 && event.charCode <= 57;'>
					</div>
				</div>
			</div>

			<button type="button" class="btn square-border mt-4" id="collapseApply">Apply</button>

		</div>
	</div>

	<div class="collapse hidden-lg-up" id="collapseSort">
		<!-- SORT OPTIONS -->
		<div class="card card-block">
			<div class="btn-group mr-1" role="group" aria-label="First group" style="margin: 0 !important;">
				<div class="container">
					<div class="row">
						<div class="col-4">
							<button id="radius-sort" type="button" class="btn btn-secondary square-border">
								<i id="radius-sort-icon" class="fa fa-sort-asc" aria-hidden="true"></i> Radius
							</button>
						</div>
						<div class="col-4">
							<button id="weight-sort" type="button" class="btn btn-secondary square-border">
								<i id="weight-sort-icon" class="" aria-hidden="true"></i> Weight
							</button>
						</div>
						<div class="col-4">
							<button id="expiry-sort" type="button" class="btn btn-secondary square-border">
								<i id="expiry-sort-icon" class="" aria-hidden="true"></i> Expiry
							</button>
						</div>
					</div>
				</div>
				<br>
				<button id="radius-sort" type="button" class="btn btn-secondary square-border" style="width:33%;">
					<i id="radius-sort-icon" class="fa fa-sort-asc" aria-hidden="true"></i> Radius
				</button>
				<button id="weight-sort" type="button" class="btn btn-secondary" style="width:33%;">
					<i id="weight-sort-icon" class="" aria-hidden="true"></i> Weight
				</button>
				<button id="expiry-sort" type="button" class="btn btn-secondary square-border" style="width:33%;">
					<i id="expiry-sort-icon" class="" aria-hidden="true"></i> Expiry
				</button>
			</div>
		</div>
	</div>

	{#<div class="container-fluid" style="height: 14px;"></div>#}
	{#<br>#}

	<div class="container-fluid my-2 h-100">
		<div class="row no-gutters h-100">
			<!-- FOOD ITEMS -->
			<div class="d-flex flex-column flex-auto" id="items" style="position: relative; overflow: hidden; border-right: 1px solid #dce0e0;">
				<div class="container p-0">
					<div class="card-columns" id="item-cards" style="position: absolute; column-gap: 0.4rem;">
					</div>
					<i class="fa fa-spinner fa-pulse fa-3x fa-fw hidden-xs-up" id="loading-icon"></i>
				</div>
				<div class="d-none w-100 h-100" id="items-fade" style="position: absolute; z-index: 100; opacity: 0.75; background-color: #000">

				</div>
			</div>
			<!-- MAP -->
			<div class="d-block col-md-5">
				<div id="mapspacer" class="d-block h-0"></div>
				<div id="map" class="w-100" style="height: 90%; "></div>
			</div>

		</div>
	</div>

	<div class="d-none" id="card-storage"></div>

	<div class="modal fade" id="cardModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-lg modal-dialog" role="document">
			<div class="modal-content" id="cardModalContent">
				<!--<div class="modal-body">
				</div>-->
			</div>
		</div>
	</div>

	<div class="form-check form-check-inline p-2 square-border" id="mapControlDiv" style="background-color: #fff; box-shadow: 0 2px 6px rgba(0,0,0,.3)">
		<label class="form-check-label" style="font-size:12px">
			<input class="form-check-input" type="checkbox" id="mapCheckBox"> Search within map boundaries
		</label>
	</div>
{% endblock %}


{% block scripts %}
	{{ parent() }}
	{{ block("main", "map.twig") }}
	{{ block("searchableMap", "map.twig") }}

	<!-- SEARCH FUNCTIONALITY -->
	<script>
		cardResults = {};
		function updatePlace(place) {
			if (!place.geometry) {
				console.log("Returned place contains no geometry");
				return;
			}
			clearMarkers();
			let loc = place.geometry.location, input = $("#pac-input");
			input.attr("data-latitude", loc.lat());
			input.attr("data-longitude", loc.lng());
			mapPanTo(loc.lat(), loc.lng());
			let query = UpdateQueryString('latitude', loc.lat());
			query = UpdateQueryString('longitude', loc.lng(), query);
			history.pushState('Location updated', 'Location updated', query);
			refreshSearch();
		}
		$("#map").one("maploaded", function () {
			initSingleSearchMap(updatePlace);
			let input = $('#pac-input'), curlat = input.attr("data-latitude"), curlong = input.attr("data-longitude");
			if ((curlat === "") || (curlong === "")) {
				setToUserData(null, null, function (position) {
					input.attr("data-latitude", position.lat);
					input.attr("data-longitude", position.lng);
					mapPanTo(position.lat, position.lng);
					refreshSearch();
				});
			} else {
				mapPanTo(Number(curlat), Number(curlong));
				refreshSearch();
			}
			$(window).on('scroll', function () {
				if ($(window).scrollTop() + window.innerHeight >= $(document).height()) {
					addMoreItems();
				}
				let diff = $(window).scrollTop() - $('#map').parent().offset().top;
				if (diff > 0) {
					$('#mapspacer').height(diff);
				}
			});

			let element = getMapElement(), map = element.gMap;
			let thediv = $('#mapControlDiv'), maplistener;
			thediv[0].index = 1;
			map.controls[google.maps.ControlPosition.TOP_CENTER].push(thediv[0]);
			//Onclick here
			$('#mapCheckBox').click(function () {
				if (this.checked) {
					map.curBounds = map.getBounds().toJSON();
					map.oldCenter = map.getCenter().toJSON();
					maplistener = map.addListener('center_changed', function () {
						let newcent = map.getCenter().toJSON(), oldcent = map.oldCenter;
						let lat1 = newcent.lat, lat2 = oldcent.lat, lon1 = newcent.lng, lon2 = oldcent.lng;
						let R = 6371, dLat = (lat2 - lat1) * Math.PI / 180, dLon = (lon2 - lon1) * Math.PI / 180;
						let a = 0.5 - Math.cos(dLat) / 2 +
										Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * (1 - Math.cos(dLon)) / 2;
						let d = (R * 2 * Math.asin(Math.sqrt(a))) * 1000;
						if (d > 500) {
							map.curBounds = map.getBounds().toJSON();
							map.oldCenter = newcent;
							refreshSearch();
						}
					});
				} else {
					google.maps.event.removeListener(maplistener);
					mapPanTo(Number(input.attr("data-latitude")), Number(input.attr("data-longitude")));
				}
				refreshSearch();
			});
		});
	</script>

	<script>
		//Do this before page loaded event fires
		let obj = {}, i, parts, len, key, value;
		let _params = window.location.search.substr(1).split('#')[0].split('&');
		for (i = 0, len = _params.length; i < len; i++) {
			parts = _params[i].split('=');
			if (!parts[0]) {continue;}
			obj[parts[0]] = parts[1] || true;
		}

		if ('search' in obj) {
			let searchval = obj['search'];
			if (searchval === true) {
				window.history.replaceState('', '', UpdateQueryString('search', null));
			} else {
				$("#main-search-input").val(searchval);
			}
		} else {
			$("#main-search-input").val("");
		}

		if ('category' in obj) {
			$('#categories-dropdown').val(obj['category']);
		}

		if ('radius' in obj) {
			$('#radiusSlider').attr('data-slider-value', obj['radius']);
		}

		if ('longitude' in obj) {
			if ('latitude' in obj) {
				let input = $("#pac-input");
				input.attr("data-latitude", obj.latitude);
				input.attr("data-longitude", obj.longitude);
			} else {
				window.history.replaceState('', '', UpdateQueryString('latitude', null));
			}
		} else if ('latitude' in obj) {
			window.history.replaceState('', '', UpdateQueryString('longitude', null));
		}
		if ('minQuantity' in obj) {
			if ('maxQuantity' in obj) {
				$('#quantitySlider').attr('data-slider-value', '[' + obj['minQuantity'] + ',' + obj['maxQuantity'] + ']');
			} else {
				let maxval = $('#quantitySlider').attr('data-slider-max');
				$('#quantitySlider').attr('data-slider-value', '[' + obj['minQuantity'] + ',' + maxval + ']');
				window.history.replaceState('', '', UpdateQueryString('maxQuantity', maxval));
			}
		} else if ('maxQuantity' in obj) {
			let minval = $('#quantitySlider').attr('data-slider-min');
			$('#quantitySlider').attr('data-slider-value', '[' + minval + ',' + obj['maxQuantity'] + ']');
			window.history.replaceState('', '', UpdateQueryString('minQuantity', minval));
		}
		if ('minWeight' in obj) {
			if ('maxWeight' in obj) {
				$('#weightSlider').attr('data-slider-value', '[' + obj['minWeight'] + ',' + obj['maxWeight'] + ']');
			} else {
				let maxval = $('#weightSlider').attr('data-slider-max');
				$('#weightSlider').attr('data-slider-value', '[' + obj['minWeight'] + ',' + maxval + ']');
				window.history.replaceState('', '', UpdateQueryString('maxWeight', maxval));
			}
		} else if ('maxWeight' in obj) {
			let minval = $('#weightSlider').attr('data-slider-min');
			$('#weightSlider').attr('data-slider-value', '[' + minval + ',' + obj['maxWeight'] + ']');
			window.history.replaceState('', '', UpdateQueryString('minWeight', minval));
		}

		function UpdateQueryString(key, value, url) {
			if (!url) {
				url = window.location.href;
			}
			let re = new RegExp("([?&])" + key + "=.*?(&|#|$)(.*)", "gi"),
				hash;
			if (re.test(url)) {
				if (typeof value !== 'undefined' && value !== null) {
					return url.replace(re, '$1' + key + "=" + value + '$2$3');
				} else {
					hash = url.split('#');
					url = hash[0].replace(re, '$1$3').replace(/(&|\?)$/, '');
					if (typeof hash[1] !== 'undefined' && hash[1] !== null) {
						url += '#' + hash[1];
					}
					return url;
				}
			}
			else {
				if (typeof value !== 'undefined' && value !== null) {
					var separator = url.indexOf('?') !== -1 ? '&' : '?';
					hash = url.split('#');
					url = hash[0] + separator + key + '=' + value;
					if (typeof hash[1] !== 'undefined' && hash[1] !== null) {
						url += '#' + hash[1];
					}
					return url;
				}
				else {
					return url;
				}
			}
		}
		function hideAllPopovers() {
			$('#radius-popover').popover('hide');
			$('#quantity-popover').popover('hide');
			$('#weight-popover').popover('hide');
		}
	</script>

	<script>
		$(document).ready(function () {
			searchtimeout = null;
			$("#search-form").submit(function () {
				clearTimeout(searchtimeout);
				let searchval = $("#main-search-input").val(), catval = $("#categories-dropdown").val();
				let query = window.location.href;
				if (searchval !== "") {
					query = UpdateQueryString('search', searchval, query);
				} else {
					query = UpdateQueryString('search', null, query);
				}
				if (catval !== "") {
					query = UpdateQueryString('category', catval, query);
				} else {
					query = UpdateQueryString('category', null, query);
				}
				history.pushState('', '', query);
				refreshSearch();
				return false;
			});
			$("#main-search-input").keypress((function () {
				clearTimeout(searchtimeout);
				searchtimeout = setTimeout(function () {
					$("#search-form").submit();
				}, 1250);
			})).on('keydown', function (e) {
				if ((e.which === 8) || (e.which === 46)) {$(this).trigger('keypress');}
			});
			//category onchange
		});
	</script>

	<!-- COLLAPSIBLES -->
	<script>
		function roundTo(x, y) {return Math.round(x / y) * y;}

		$('#collapseSort').collapse({
			toggle: false
		});

		$('#collapseFilter').collapse({
			toggle: false
		});

		$('#filterCollapseBtn').click(function () {
			try {
				$('#collapseSort').collapse('hide');
				$('#collapseFilter').collapse('toggle');
			} catch (err) {}
		});

		$('#sortCollapseBtn').click(function () {
			try {
				$('#collapseFilter').collapse('hide');
				$('#collapseSort').collapse('toggle');
			} catch (err) {} //sometimes bootstrap shits itself for no reason
		});

		$('#collapseApply').click(function () {
			let updating = $('#quantitySlider'), min = $('#coll-quantMin').val(), max = $('#coll-quantMax').val(),
				step = updating.attr('data-slider-step'), slidmin = updating.attr('data-slider-min'), slidmax = updating.attr('data-slider-max');
			if ((min !== "") && (max !== "")) {
				if (min > max) {
					[min, max] = [max, min];
				} //check min<sliderMax?
				min = Math.max(Math.min(roundTo(Number(min), step), slidmin), slidmax);
				max = Math.min(Math.max(roundTo(Number(max), step), slidmax), slidmin);

				updating.attr('data-slider-value', '[' + min + ',' + max + ']');

			} //Error feedback?
			updating = $('#weightSlider'), min = $('#coll-weightMin').val(), max = $('#coll-weightMax').val(),
				step = updating.attr('data-slider-step'), slidmin = updating.attr('data-slider-min'), slidmax = updating.attr('data-slider-max');
			if ((min !== "") && (max !== "")) {
				if (min > max) {
					[min, max] = [max, min];
				}
				min = Math.max(Math.min(roundTo(Number(min), step), slidmin), slidmax);
				max = Math.min(Math.max(roundTo(Number(max), step), slidmax), slidmin);

				updating.attr('data-slider-value', '[' + min + ',' + max + ']');
			}
			updating = $('#radiusSlider'), min = $('#coll-radius').val(),
				step = updating.attr('data-slider-step'), slidmin = updating.attr('data-slider-min'), slidmax = updating.attr('data-slider-max');
			if (min !== "") {
				min = Math.max(Math.min(roundTo(Number(min), step), slidmin), slidmax);

				updating.attr('data-slider-value', min);
			}

			$('#collapseFilter').collapse('hide');
			refreshSearch();
		});

	</script>

	<script>
		// Popovers
		$('#radius-popover').popover({
			html   : true,
			content: function () {
				return $("#radius-popover-content").html();
			},
		}).on('shown.bs.popover', function () {
			let aslider = $('.popover').find('#radiusSlider');
			$('.popover').find('#radiusDisplay').text($('#radiusSlider').attr('data-slider-value'));
			$('.popover').find('#radiusApply').click(function () {
				let val = aslider.slider('getValue');
				$('#radiusSlider').attr('data-slider-value', val);
				window.history.pushState('Radius updated', 'Radius updated', UpdateQueryString('radius', val));
				hideAllPopovers();
				refreshSearch();
			});
			aslider.slider({
				formatter: function (value) {
					return value + 'm';
				},
			}).on("slide", function (slideEvt) {
				$('.popover').find('#radiusDisplay').text(slideEvt.value + "m");
			});
			$('.popover').find('.popovercancel').click(hideAllPopovers);
			$('.slider-selection').css('background', '#BABABA');
			$('#quantity-popover').popover('hide');
			$('#weight-popover').popover('hide');
		});
		$('#quantity-popover').popover({
			html   : true,
			content: function () {
				return $("#quantity-popover-content").html();
			},
		}).on('shown.bs.popover', function () {
			let aslider = $('.popover').find('#quantitySlider');
			$('.popover').find('#quantityApply').click(function () {
				let val = aslider.slider('getValue');
				$('#quantitySlider').attr('data-slider-value', '[' + val.toString() + ']');
				let query = UpdateQueryString('minQuantity', val[0]);
				query = UpdateQueryString('maxQuantity', val[1], query);
				history.pushState('Quantity updated', 'Quantity updated', query);
				hideAllPopovers();
				refreshSearch();
			});
			aslider.slider({
				range    : true,
				formatter: function (value) {
					if (value.constructor === Array) {
						return value[0] + " to " + value[1] + " items";
					}
					return value;
				},
			});
			$('.slider-selection').css('background', '#BABABA');
			$('#radius-popover').popover('hide');
			$('#weight-popover').popover('hide');
		});
		$('#weight-popover').popover({
			html   : true,
			content: function () {
				return $("#weight-popover-content").html();
			},
		}).on('shown.bs.popover', function () {
			let aslider = $('.popover').find('#weightSlider');
			$('.popover').find('#weightApply').click(function () {
				let val = aslider.slider('getValue');
				$('#weightSlider').attr('data-slider-value', '[' + val.toString() + ']');
				let query = UpdateQueryString('minWeight', val[0]);
				query = UpdateQueryString('maxWeight', val[1], query);
				history.pushState('Weight updated', 'Weight updated', query);
				hideAllPopovers();
				refreshSearch();
			});
			aslider.slider({
				range    : true,
				formatter: function (value) {
					if (value.constructor === Array) {
						let result = "";
						result += value[0] > 1000 ? (value[0] / 1000) + "kg" : value[0] + "g";
						result += "-" + (value[1] > 1000 ? (value[1] / 1000) + "kg" : value[1] + "g");
						return result;
					}
					return value;
				},
			});
			$('.slider-selection').css('background', '#BABABA');
			$('#radius-popover').popover('hide');
			$('#quantity-popover').popover('hide');
		});
	</script>

	<!-- HANDLE SORTING -->
	<script>
		//  Radius
		$("#radius-sort").click(function () {
			// Change Icon
			if ($("#radius-sort-icon").hasClass("fa-sort-asc")) {
				$("#radius-sort-icon").attr('class', 'fa fa-sort-desc'); // Set to Descending
				// Sort Items
			} else if ($("#radius-sort").hasClass("fa-sort-desc")) {
				$("#radius-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			} else {
				$("#radius-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			}
			$("#weight-sort-icon").attr('class', '');
			$("#quantity-sort-icon").attr('class', '');
			refreshSearch();
		});
		// Weight
		$("#weight-sort").click(function () {
			// Change Icon
			if ($("#weight-sort-icon").hasClass("fa-sort-asc")) {
				$("#weight-sort-icon").attr('class', 'fa fa-sort-desc'); // Set to Descending
				// Sort Items
			} else if ($("#weight-sort").hasClass("fa-sort-desc")) {
				$("#weight-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			} else {
				$("#weight-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			}
			$("#radius-sort-icon").attr('class', '');
			$("#quantity-sort-icon").attr('class', '');
			refreshSearch();
		});
		// Expiry
		$("#quantity-sort").click(function () {
			// Change Icon
			if ($("#quantity-sort-icon").hasClass("fa-sort-asc")) {
				$("#quantity-sort-icon").attr('class', 'fa fa-sort-desc'); // Set to Descending
				// Sort Items
			} else if ($("#quantity-sort").hasClass("fa-sort-desc")) {
				$("#quantity-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			} else {
				$("#quantity-sort-icon").attr('class', 'fa fa-sort-asc'); // Set to Ascending
				// Sort Items
			}
			$("#radius-sort-icon").attr('class', '');
			$("#weight-sort-icon").attr('class', '');
			refreshSearch();
		});
	</script>


{% endblock %}
